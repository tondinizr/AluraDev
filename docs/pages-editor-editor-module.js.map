{"version":3,"sources":["./src/app/pages/editor/code-editor/code-editor.component.ts","./src/app/pages/editor/code-editor/code-editor.component.html","./src/app/pages/editor/code-editor/code-editor.module.ts","./src/app/pages/editor/project-properties/project-properties.component.ts","./src/app/pages/editor/project-properties/project-properties.component.html","./src/app/pages/editor/editor.module.ts","./src/app/pages/editor/project-properties/project-properties.module.ts","./src/app/pages/editor/editor.component.ts","./src/app/pages/editor/editor.component.html","./src/app/pages/editor/editor-routing.module.ts"],"names":[],"mappings":"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","file":"pages-editor-editor-module.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HighlightResult } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.scss'],\n})\nexport class CodeEditorComponent implements OnInit {\n  @Input() color!: string;\n  @Input() code!: string;\n  @Input() language!: any;\n  @Output() languageChange = new EventEmitter<any>();\n  @Output() codeChange = new EventEmitter<string>();\n  highlighted = false;\n  response!: HighlightResult;\n  codeForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.codeForm = this.fb.group({\n      code: ['', [Validators.required]],\n    });\n  }\n\n  onHighlight(e: HighlightResult): void {\n    this.language = e.language;\n  }\n\n  highlight(): void {\n    this.highlighted = !this.highlighted;\n    setTimeout(() => {\n      this.languageChange.emit(this.language);\n      this.codeChange.emit(this.codeForm.get('code')?.value);\n    });\n  }\n}\n","<div class=\"editor\">\n  <form [formGroup]=\"codeForm\" class=\"editor__container\">\n    <div class=\"editor__container__border\" [style.background]=\"color\">\n      <div class=\"editor__container__border__console\">\n        <div class=\"editor__container__border__console__decoration\">\n          <div class=\"dot red\"></div>\n          <div class=\"dot yellow\"></div>\n          <div class=\"dot green\"></div>\n        </div>\n        <div class=\"editor__container__border__console__content\">\n          <div\n            *ngIf=\"!highlighted\"\n            class=\"editor__container__border__console__content__edit\"\n          >\n            <textarea\n              formControlName=\"code\"\n              class=\"editor__container__border__console__content__edit__code\"\n              [value]=\"code\"\n            ></textarea>\n          </div>\n          <pre class=\"editor__container__border__console__content__code\">\n              <code\n                *ngIf=\"highlighted\"\n                [lang]=\"'html'\"\n                (highlighted)=\"onHighlight($event)\"\n                [highlight]=\"codeForm.get('code')?.value\" [lineNumbers]=\"true\"></code>\n            </pre>\n        </div>\n      </div>\n    </div>\n  </form>\n  <div class=\"editor__highlight\">\n    <button\n      [disabled]=\"!codeForm.valid\"\n      (click)=\"highlight()\"\n      class=\"editor__highlight__button\"\n    >\n      {{\n        !this.codeForm.get(\"code\")?.value\n          ? \"Digite o c√≥digo\"\n          : highlighted\n          ? \"Editar o codigo\"\n          : \"Visualizar com o highlight\"\n      }}\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CodeEditorComponent } from './code-editor.component';\n\n@NgModule({\n  declarations: [CodeEditorComponent],\n  imports: [CommonModule, HighlightModule, ReactiveFormsModule],\n  exports: [CodeEditorComponent],\n})\nexport class CodeEditorModule {}\n","import { Observable } from 'rxjs';\nimport { PlatformService } from './../../../services/platform/platform.service';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-project-properties',\n  templateUrl: './project-properties.component.html',\n  styleUrls: ['./project-properties.component.scss'],\n})\nexport class ProjectPropertiesComponent implements OnInit {\n  @Input() color = '#6BD1FF';\n  @Input() language!: string;\n  @Input() codigo!: string;\n  @Output() colorChange = new EventEmitter<string>();\n  propertiesForm!: FormGroup;\n  platform: Observable<any>;\n\n  constructor(private fb: FormBuilder, pS: PlatformService) {\n    this.platform = pS.getPlatform();\n  }\n\n  ngOnInit() {\n    this.propertiesForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      language: ['', [Validators.required]],\n      color: [this.color, [Validators.required]],\n      codigo: ['', [Validators.required]],\n    });\n    this.onColorChange();\n  }\n\n  onColorChange(): void {\n    const cor = this.propertiesForm.get('color')?.value;\n    this.colorChange.emit(cor);\n  }\n\n  handleChange(event: any): void {\n    console.log(event);\n    console.log(this.language);\n    console.log(this.codigo);\n  }\n\n  sendData() {\n    console.table(this.propertiesForm.value);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.language !== undefined) {\n      if (changes?.language.currentValue !== '') {\n        this.propertiesForm\n          .get('language')\n          ?.setValue(changes.language.currentValue);\n      }\n    }\n    if (changes.language !== undefined) {\n      if (changes.codigo.currentValue !== '') {\n        this.propertiesForm\n          .get('codigo')\n          ?.setValue(changes.codigo.currentValue);\n      }\n    }\n  }\n}\n","<form [formGroup]=\"propertiesForm\" class=\"options {{ platform | async }}\">\n  <div class=\"options__project\">\n    <h2 class=\"options__project__title\">Seu projeto</h2>\n    <input\n      formControlName=\"name\"\n      class=\"options__project__input\"\n      type=\"text\"\n      placeholder=\"Nome do seu projeto\"\n    />\n    <textarea\n      formControlName=\"description\"\n      class=\"options__project__textarea\"\n      name=\"\"\n      placeholder=\"Descri√ß√£o do seu projeto\"\n      id=\"\"\n      cols=\"30\"\n      rows=\"2\"\n    ></textarea>\n  </div>\n  <div class=\"options__personalization\" id=\"personalization\">\n    <h2 class=\"options__personalization__title\">Personaliza√ß√£o</h2>\n    <section class=\"not-desktop\">\n      <input\n        formControlName=\"language\"\n        class=\"options__personalization__language\"\n        name=\"languages\"\n        id=\"languages\"\n        placeholder=\"Esperando formata√ß√£o\"\n      />\n      <input\n        id=\"color-input\"\n        formControlName=\"color\"\n        class=\"options__personalization__input\"\n        type=\"color\"\n        (change)=\"onColorChange()\"\n      />\n      <div id=\"color-contet\" class=\"options__personalization__color\">\n        <label\n          [style.background]=\"color\"\n          for=\"color-input\"\n          id=\"pseudo-color-input\"\n          tabindex=\"0\"\n        ></label>\n      </div>\n    </section>\n  </div>\n  <button class=\"options__button\" (click)=\"sendData()\">Salvar projeto</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EditorComponent } from './editor.component';\nimport { EditorRoutingModule } from './editor-routing.module';\nimport { CodeEditorModule } from './code-editor/code-editor.module';\nimport { ProjectPropertiesModule } from './project-properties/project-properties.module';\n\n@NgModule({\n  declarations: [EditorComponent],\n  imports: [\n    CommonModule,\n    EditorRoutingModule,\n    CodeEditorModule,\n    ProjectPropertiesModule,\n  ],\n  exports: [EditorComponent],\n})\nexport class EditorModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ProjectPropertiesComponent } from './project-properties.component';\n\n@NgModule({\n  declarations: [ProjectPropertiesComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [ProjectPropertiesComponent],\n})\nexport class ProjectPropertiesModule {}\n","import { Observable } from 'rxjs';\nimport { Component, Input } from '@angular/core';\n\nimport { PlatformService } from 'src/app/services/platform/platform.service';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss'],\n})\nexport class EditorComponent {\n  platform: Observable<string>;\n  color = '#6BD1FF';\n  code = '';\n  language = '';\n\n  constructor(private pS: PlatformService) {\n    window.dispatchEvent(new Event('resize'));\n    this.platform = pS.getPlatform();\n  }\n}\n","<section class=\"editor__{{ platform | async }}\">\n  <app-code-editor\n    [(code)]=\"code\"\n    [(language)]=\"language\"\n    [color]=\"color\"\n  ></app-code-editor>\n  <app-project-properties\n    [language]=\"language\"\n    [(color)]=\"color\"\n    [codigo]=\"code\"\n  ></app-project-properties>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EditorComponent } from './editor.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditorComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditorRoutingModule {}\n"],"sourceRoot":"webpack:///"}